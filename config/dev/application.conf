akka {
  loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  log-dead-letters-during-shutdown = off
  log-dead-letters = 0
  stdout-loglevel = "INFO"
  log-config-on-start = off
  daemonic = off
  jvm-exit-on-fatal-error = on
  actor {
    provider = "akka.actor.LocalActorRefProvider"
    unstarted-push-timeout = 100s
    default-mailbox {
      mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
      mailbox-push-timeout-time = 2s
    }
    default-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 16
        parallelism-factor = 4.0
        parallelism-max = 64
      }
      throughput = 1
    }
    gcm-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 16
        parallelism-factor = 4.0
        parallelism-max = 16
      }
      throughput = 1
    }
    apns-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 16
        parallelism-factor = 4.0
        parallelism-max = 16
      }
      throughput = 1
    }
    mpns-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 16
        parallelism-factor = 4.0
        parallelism-max = 16
      }
      throughput = 1
    }
    bulk-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 4
        parallelism-factor = 4.0
        parallelism-max = 4
      }
      throughput = 1
    }
    sms-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 4
        parallelism-factor = 4.0
        parallelism-max = 4
      }
      throughput = 1
    }
  }
}

spray.httpx {
  compact-json-printing = true
}

spray.can {
  server {
    remote-address-header = on
  }
}



flipcast.config {
  role = "all" //Roles [all - Both api endpoint and worker,api - do not start worker, worker - api will be unavailable]
  server {
    port = 9090
    bulk-message-batch-size = 1000
  }
  mariadb = {
    host = localhost
    driver = org.mariadb.jdbc.Driver
    numThreads = 10
    minConnections = 10
    maxConnections = 10
    keepAliveConnection = true
    connectionTestQuery = "SELECT 1"
    database = "flipcast"
    user = root
  }
  mongo {
    hosts = "localhost:27017"
    database = flipcast
    connectTimeout = 10000
    socketTimeout = 10000
    connectionsPerHost = 2
    maxAutoConnectRetryTime = 100
    maxWaitTime = 1000
    sharding = false
  }
  rmq {
    hosts = "localhost:5672"
    vhost = "/"
    user = guest
    pass = guest
  }
  push {
    config = mongo
    file {
      source = "/config/push-configuration.conf"
    }
    mongo {
      source = "push_configuration"
    }
  }
  sms {
    config = file
    file {
      source ="config/sms-configuration.conf"
    }
  }
  worker {
    configs = [ "gcm", "apns", "mpns" ]
    gcm {
      priorityTags = ["default"]
      default {
        sidelineWorkerName = "flipcastSidelineConsumer"
        workerInstances = 8
      }
    }
    apns {
      priorityTags = ["default"]
      default {
        sidelineWorkerName = "flipcastSidelineConsumer"
        workerInstances = 4
      }
    }
    mpns {
      priorityTags = ["default"]
      default {
        sidelineWorkerName = "flipcastSidelineConsumer"
        workerInstances = 4
      }
    }
    bulk {
      priorityTags = ["default"]
      default {
        sidelineWorkerName = "flipcastSidelineConsumer"
        workerInstances = 2
      }
    }
    gupshup {
      priorityTags = ["default"]
      default {
        sidelineWorkerName = "flipcastSidelineConsumer"
        workerInstances = 1
      }
    }
  }
}